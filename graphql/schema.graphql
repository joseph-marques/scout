type Query {
    scout(id: ID!): Scout
    scouts(skills: [String!], numScouts: Int, startAfter: ID): [Scout]
}

type Mutation {
    updateScout(scout: ScoutInput!): Scout!
    reviewScout(review: ReviewInput!): Boolean!
    updateAppointment(appointment: AppointmentInput!): Appointment!
    commentOnAppointment(appointmentID: ID!, comment: AppointmentCommentInput!): Boolean!
}

input ScoutInput {
    id: ID!
    firstname: String!
    lastname: String!
    bio: String!
    roles: [RoleInput!]
    skills: [String!]
    services: [ServiceInput!]
    isListed: Boolean
}

input RoleInput {
    title: String
    institution: String
    tenure: String
}

input ReviewInput {
    author: ID!
    subject: ID!
    rating: Float!
    text: String
}

input ServiceInput {
    title: String!
    description: String!
    price: String!
}

input AppointmentInput {
    id: ID!
    """An ISO8601 Timestamp"""
    when: String
    status: AppointmentStatus
    serviceid: ID!
    requesterid: ID!
    withid: ID!
    note: String
}

input AppointmentCommentInput {
    author: ID!,
    comment: String!
}

type Scout {
    id: ID!
    firstname: String!
    lastname: String!
    bio: String!
    roles: [Role!]
    skills: [String!]
    rating: ReviewSummary
    reviews: [Review!]
    isListed: Boolean
    appointmentsWithMe: [Appointment!]
    appointmentsWithOthers: [Appointment!]
    services: [Service!]
}

type Role {
    title: String
    institution: String
    tenure: String
}

type ReviewSummary {
    rating: Float
    count: Int
}

type Review {
    author: Scout!
    subject: Scout!
    rating: Float!
    text: String
}

type Service {
    id: ID!
    title: String
    description: String
    price: String
}

type Appointment {
    id: ID!
  """An ISO8601 Timestamp"""
    when: String
    status: AppointmentStatus
    service: Service
    requester: Scout
    with: Scout
    note: String
    comments: [AppointmentComment!]
}

type AppointmentComment {
    author: Scout!,
    comment: String!
}

enum AppointmentStatus {
    UNKNOWN
    REQUESTED
    CONFIRMED
    PAST
    CANCELLED
}